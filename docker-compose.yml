version: '3'
services:
  nginx:                              # routes requests between api (formerly 'server') and client
    restart: always                   # nginx is entire app wide router. Should run always so restarts always if crashes
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'                     # port 3050 on laptop to receive incoming reqs to nginx server on port 80
  postgres:
    image: 'postgres:latest'
  redis:
    image: 'redis:latest'
  api:                                # formerly named 'server'. 'Server' might be a reserved word with Nginx
    build:
      dockerfile: Dockerfile.dev      # no file path only the exact file name
      context: ./server               # context is the folders/files the dockerfile is applied to and also where it is
    volumes:
      - /app/node_modules             # in the container don't override node_modules with that from the ./server folder
      # dynamically copy from ./server to container/app. Like when app accesses anything in container/app it gets
      # redirected to ./server. Changes in ./server get copied to container/app so no image rebuild is needed
      - ./server:/app
    environment:
      - REDIS_HOST=redis              # to access a service from docker-compose.yml specify its name. It's on line 10
      - REDIS_PORT=6379               # default Redis port
      - PGUSER=postgres
      - PGHOST=postgres               # service's name on line 8
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules             # in the container don't override node_modules with that from the ./server folder
      - ./client:/app
  worker:
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
